import pool from "../config/db.config.js";

// ‚ûï Cr√©er un niveau
async function create(req, res) {
  try {
    const { IDNiveaux, Niveaux } = req.body;

    if (!IDNiveaux || !Niveaux) {
      return res.status(400).json({
        error: "IDNiveaux et Niveaux sont obligatoires"
      });
    }

    const [result] = await pool.query(
      `INSERT INTO niveaux (IDNiveaux, Niveaux) VALUES (?, ?)`,
      [IDNiveaux, Niveaux]
    );

    return res.status(201).json({
      message: "Niveau ajout√© avec succ√®s",
      IDNiveaux: IDNiveaux
    });
  } catch (error) {
    return res.status(500).json({ error: "Erreur serveur: " + error.message });
  }
}

// ‚úèÔ∏è Modifier un niveau
async function updateOne(req, res) {
  try {
    const { IDNiveaux } = req.params;
    const { Niveaux } = req.body;

    // Validation de l'entr√©e
    if (!IDNiveaux) {
      return res.status(400).json({ error: "L'identifiant du niveau est requis dans l'URL." });
    }

    if (!Niveaux || Niveaux.trim() === "") {
      return res.status(400).json({ error: "Le champ Niveaux est obligatoire." });
    }

    // Requ√™te de mise √† jour
    const [result] = await pool.query(
      "UPDATE niveaux SET Niveaux = ? WHERE IDNiveaux = ?",
      [Niveaux, IDNiveaux]
    );

    // V√©rifier si le niveau existe
    if (result.affectedRows === 0) {
      return res.status(404).json({ error: `Aucun niveau trouv√© avec l'identifiant ${IDNiveaux}` });
    }

    // Succ√®s
    return res.status(200).json({
      message: `Le niveau avec l'ID ${IDNiveaux} a √©t√© mis √† jour avec succ√®s.`,
      IDNiveaux,
      nouveauNiveau: Niveaux
    });
  } catch (error) {
    return res.status(500).json({ error: "Erreur serveur : " + error.message });
  }
}


// ‚ùå Supprimer un niveau
async function deleteOne(req, res) {
  try {
    const { IDNiveaux } = req.params;

    const [result] = await pool.query(
      `DELETE FROM niveaux WHERE IDNiveaux = ?`,
      [IDNiveaux]
    );

    if (result.affectedRows === 0) {
      return res.status(404).json({ error: "Niveau non trouv√©" });
    }

    return res.status(200).json({
      message: "Niveau supprim√© avec succ√®s"
    });
  } catch (error) {
    return res.status(500).json({ error: "Erreur serveur: " + error.message });
  }
}

// üìÑ Lister tous les niveaux
async function getAll(req, res) {
  try {
    const [result] = await pool.query(`SELECT * FROM niveaux`);
    return res.status(200).json(result);
  } catch (error) {
    return res.status(500).json({ error: "Erreur serveur: " + error.message });
  }
}

// üîç Obtenir un seul niveau
async function getOne(req, res) {
  try {
    const { IDNiveaux } = req.params;

    const [result] = await pool.query(
      `SELECT * FROM niveaux WHERE IDNiveaux = ?`,
      [IDNiveaux]
    );

    if (result.length === 0) {
      return res.status(404).json({ error: "Niveau non trouv√©" });
    }

    return res.status(200).json(result[0]);
  } catch (error) {
    return res.status(500).json({ error: "Erreur serveur: " + error.message });
  }
}

// üì¶ Export des fonctions
export default {
  create,
  updateOne,
  deleteOne,
  getAll,
  getOne,
};
